[1,["1fpIcjgfZOdp/c/FHocMm7","8bFE6WOjhLL5CgFpvgp0oJ"],["_textureSetter","_effectAsset"],["cc.SpriteFrame",["cc.AnimationClip",["_name","_duration","wrapMode","curveData"],-1],["cc.EffectAsset",["_name","shaders","techniques"],0],["cc.Material",["_name","_techniqueData"],1]],[[1,0,1,2,3,5],[2,0,1,2,4],[3,0,1,3]],[[[[0,"move",0.3333333333333333,2,{"props":{"position":[{"frame":0,"value":[5,11,0]},{"frame":0.08333333333333333,"value":[4,11.5,0]},{"frame":0.16666666666666666,"value":[5.5,12,0]},{"frame":0.25,"value":[6,11,0]},{"frame":0.3333333333333333,"value":[5,10,0]}]}}]],0,0,[],[],[]],[[{"name":"baitiao","rect":[855,429,50,8],"offset":[0,0],"originalSize":[50,8],"capInsets":[4,0,4,0]}],[0],0,[0],[0],[0]],[[[1,"whiteShow",[{"hash":2553085378,"record":null,"name":"whiteShow|vs|fs","glsl3":{"vert":"\nprecision highp float;\nuniform CCGlobal {\n  mat4 cc_matView;\n  mat4 cc_matViewInv;\n  mat4 cc_matProj;\n  mat4 cc_matProjInv;\n  mat4 cc_matViewProj;\n  mat4 cc_matViewProjInv;\n  vec4 cc_cameraPos;\n  vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_screenScale;\n};\nuniform CCLocal {\n  mat4 cc_matWorld;\n  mat4 cc_matWorldIT;\n};\nin vec3 a_position;\nin vec4 a_color;\nout vec4 v_color;\n#if USE_TEXTURE\nin vec2 a_uv0;\nout vec2 v_uv0;\n#endif\nvoid main () {\n  vec4 pos = vec4(a_position, 1);\n  #if CC_USE_MODEL\n  pos = cc_matViewProj * cc_matWorld * pos;\n  #else\n  pos = cc_matViewProj * pos;\n  #endif\n  #if USE_TEXTURE\n  v_uv0 = a_uv0;\n  #endif\n  v_color = a_color;\n  gl_Position = pos;\n}","frag":"\nprecision highp float;\n#if USE_ALPHA_TEST\n  uniform ALPHA_TEST {\n    float alphaThreshold;\n  };\n#endif\nvoid ALPHA_TEST (in vec4 color) {\n  #if USE_ALPHA_TEST\n      if (color.a < alphaThreshold) discard;\n  #endif\n}\nvoid ALPHA_TEST (in float alpha) {\n  #if USE_ALPHA_TEST\n      if (alpha < alphaThreshold) discard;\n  #endif\n}\nin vec4 v_color;\n#if USE_TEXTURE\nin vec2 v_uv0;\nuniform sampler2D texture;\nuniform myUniform{\n  float howWhite;\n  float power;\n  float time;\n};\n#endif\nvoid main () {\n  vec4 o = vec4(1, 1, 1, 1);\n  float mix_num =1.0;\n  float powerTime =time*power;\n  float show = abs(sin(powerTime))*howWhite+mix_num;\n  #if USE_TEXTURE\n  vec4 texture_tmp = texture(texture, v_uv0);\n  #if CC_USE_ALPHA_ATLAS_texture\n      texture_tmp.a *= texture(texture, v_uv0 + vec2(0, 0.5)).r;\n  #endif\n  #if INPUT_IS_GAMMA\n    o.rgb *= (texture_tmp.rgb * texture_tmp.rgb);\n    o.a *= texture_tmp.a;\n  #else\n    o *= texture_tmp;\n  #endif\n  #endif\n  o *= v_color;\n  ALPHA_TEST(o);\n  gl_FragColor=  vec4(o.r*show,o.g,o.b,o.a);\n}"},"glsl1":{"vert":"\nprecision highp float;\nuniform mat4 cc_matViewProj;\nuniform mat4 cc_matWorld;\nattribute vec3 a_position;\nattribute vec4 a_color;\nvarying vec4 v_color;\n#if USE_TEXTURE\nattribute vec2 a_uv0;\nvarying vec2 v_uv0;\n#endif\nvoid main () {\n  vec4 pos = vec4(a_position, 1);\n  #if CC_USE_MODEL\n  pos = cc_matViewProj * cc_matWorld * pos;\n  #else\n  pos = cc_matViewProj * pos;\n  #endif\n  #if USE_TEXTURE\n  v_uv0 = a_uv0;\n  #endif\n  v_color = a_color;\n  gl_Position = pos;\n}","frag":"\nprecision highp float;\n#if USE_ALPHA_TEST\n  uniform float alphaThreshold;\n#endif\nvoid ALPHA_TEST (in vec4 color) {\n  #if USE_ALPHA_TEST\n      if (color.a < alphaThreshold) discard;\n  #endif\n}\nvoid ALPHA_TEST (in float alpha) {\n  #if USE_ALPHA_TEST\n      if (alpha < alphaThreshold) discard;\n  #endif\n}\nvarying vec4 v_color;\n#if USE_TEXTURE\nvarying vec2 v_uv0;\nuniform sampler2D texture;\nuniform float howWhite;\nuniform float power;\nuniform float time;\n#endif\nvoid main () {\n  vec4 o = vec4(1, 1, 1, 1);\n  float mix_num =1.0;\n  float powerTime =time*power;\n  float show = abs(sin(powerTime))*howWhite+mix_num;\n  #if USE_TEXTURE\n  vec4 texture_tmp = texture2D(texture, v_uv0);\n  #if CC_USE_ALPHA_ATLAS_texture\n      texture_tmp.a *= texture2D(texture, v_uv0 + vec2(0, 0.5)).r;\n  #endif\n  #if INPUT_IS_GAMMA\n    o.rgb *= (texture_tmp.rgb * texture_tmp.rgb);\n    o.a *= texture_tmp.a;\n  #else\n    o *= texture_tmp;\n  #endif\n  #endif\n  o *= v_color;\n  ALPHA_TEST(o);\n  gl_FragColor=  vec4(o.r*show,o.g,o.b,o.a);\n}"},"builtins":{"globals":{"blocks":[{"name":"CCGlobal","defines":[]}],"samplers":[]},"locals":{"blocks":[{"name":"CCLocal","defines":[]}],"samplers":[]}},"defines":[{"name":"USE_TEXTURE","type":"boolean","defines":[]},{"name":"CC_USE_MODEL","type":"boolean","defines":[]},{"name":"USE_ALPHA_TEST","type":"boolean","defines":[]},{"name":"CC_USE_ALPHA_ATLAS_texture","type":"boolean","defines":["USE_TEXTURE"]},{"name":"INPUT_IS_GAMMA","type":"boolean","defines":["USE_TEXTURE"]}],"blocks":[{"name":"ALPHA_TEST","binding":0,"members":[{"name":"alphaThreshold","type":13,"count":1}],"defines":["USE_ALPHA_TEST"]},{"name":"myUniform","binding":1,"members":[{"name":"howWhite","type":13,"count":1},{"name":"power","type":13,"count":1},{"name":"time","type":13,"count":1}],"defines":["USE_TEXTURE"]}],"samplers":[{"name":"texture","type":29,"count":1,"binding":30,"defines":["USE_TEXTURE"]}]}],[{"passes":[{"program":"whiteShow|vs|fs","blendState":{"targets":[{"blend":true}]},"rasterizerState":{"cullMode":0},"properties":{"texture":{"value":"white","type":29},"alphaThreshold":{"type":13,"value":[0.5]},"howWhite":{"type":13,"value":[5]},"power":{"type":13,"value":[10]},"time":{"type":13,"value":[0]}}}]}]]],0,0,[],[],[]],[[[2,"whiteShow",{"0":{"defines":{"USE_TEXTURE":true}}}]],0,0,[0],[1],[1]],[[{"name":"xuetiao","rect":[1339,263,50,8],"offset":[0,0],"originalSize":[50,8],"capInsets":[4,0,4,0]}],[0],0,[0],[0],[0]],[[{"name":"xuetiaodikuang","rect":[604,295,55,12],"offset":[0,0],"originalSize":[55,12],"capInsets":[0,0,0,0]}],[0],0,[0],[0],[0]],[[[0,"move",2,2,{"props":{"angle":[{"frame":0,"value":0},{"frame":2,"value":-360}]}}]],0,0,[],[],[]]]]